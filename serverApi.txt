getPath()
	{
	  startPlace: "building_id",
	  endPlace: "building_id"
	}

	returns
	{
	  startCoord: { id: id, building_id: buildingID, latitude: number, longitude: number, in_DB: T/F },
	  endCoord: { id: id, building_id: buildingID, latitude: number, longitude: number, in_DB: T/F },
	  floorPlans: [floor1_url, floor2_url, ...]
	  buildingInfo: { 
          ID: building_id
          name: full_name
          phone_number: phone_number
          hours: hours
      }
	}
getCustomPath()
	{
	  endPlace: "building_id" (e.g. TMCB)
	}
	returns
	{
	  startCoord: { "currentLocation"},
	  endCoord: { id: id, building_id: buildingID, latitude: number, longitude: number, in_DB: T/F },
	  floorPlans: [floor1_url, floor2_url, ...]
	  buildingInfo: { 
          ID: building_id
          name: full_name
          phone_number: phone_number
          hours: hours
      }
	}
getSavedSchedules()
	{
	  username:"username"
	}
	return
    {
      	courses: [ 
          {
            name:"nameOfCourse",
            user_id: "user_id",
            time:"UTC-time",
            day:"MTWThF",
            building_id:"acronym", 
            room:"roomNum" 
          }
      	]
    }
	
// deprecated, getSavedSchedules() now does what this needed to
loadSchedule()
	{
	  username: "string",
	  schedule_name: "string" 
	}
	returns
	{
	  schedule: { 
        id: int
        username: "string", 
        schedule_name: "string", 
        courses: [ 
          course:{
            name:"nameOfCourse",
            schedule_name: "nameOfSchedule",
            time:"hh:mm am/pm",
            day:"MTWThF",
            building_id:"acronym", 
            room:"roomNum" 
          },
          ... , course:{ ... } ]
      }
	}

getAllBuildings()
{
	return [building1: { 
          ID: building_id
          name: full_name
          phone_number: phone_number
          hours: hours
      } ...]
}
    
saveSchedule()
	{
	  username:"username",
	  day_of_week: "day",
	  courses: [
		  course:{
		  	name:"nameOfCourse",
		  	time:"hh:mm am/pm", 
		  	day:"MTWThF",
		  	building_id:"acronym", 
		  	room:"roomNum" 
		  }, 
		  ... , 
		  course:{ ... } 
	  ]
	}
	returns "False" or "True"

getBuildingInfo()
    {
      building_id: "building_id"
    }
    
    returns {
      building_id: "building_id"
      name: "name"
      phone_number: "phone_number"
      hours: "hours"
      floorPlans: [...]

    }

getDirections()
    {
	startLocation:{latitude:number, longitude:number} OR
 	startPlace:building_id  //(Use one or the other. If both are sent then startLocation is the default).
	endPlace:building_id
    }
	
    returns
    {
	buildingInfo: 
	{
	    buildingInfo:{
		phone_number: "number", hours: "string", in_db: bool, id:acronym, name:name_of_building
	    },
	    endCoord: {
      		latitude: "number",
      		building_id: "acronym",
	        in_DB: true,
	        id: db_id,
	        longitude: "number"
    	   },
    	   floorPlans: [
      		... (url to floor map)
   	   ],
	    startCoord: {
	      latitude: "number",
      		building_id: "acronym",
	        in_DB: true,
	        id: db_id,
	        longitude: "number"
    	   }
	}
	googleJson:
	{
	  "status": "OK",
	  "routes": [ {
	    "summary": "",
	    "legs": [ {
	      "steps": [ {
		"travel_mode": "WALKING",
		"start_location": {
		  "lat": number,
		  "lng": number
		},
		"end_location": {
		  "lat": number,
		  "lng": number
		},
		"polyline": {
		  "points": "string"
		},
		"duration": {
		  "value": number,
		  "text": "string"
		},
		"html_instructions": "string",
		"distance": {
		  "value": number,
		  "text": "string"
		}
	      },
	      ...
	      ... additional steps of this leg
	    ...
	    ... additional legs of this route
	      "duration": {
		"value": number,
		"text": "string"
	      },
	      "distance": {
		"value": number,
		"text": "string"
	      },
	      "start_location": {
		"lat": number,
		"lng": number
	      },
	      "end_location": {
		"lat": number,
		"lng": number
	      },
	      "start_address": "string",
	      "end_address": "string"
	    } ],
	    "copyrights": "Map data Â©2010 Google, Sanborn",
	    "overview_polyline": {
	      "points": "string"
	    },
	    "warnings": [ ],
	    "waypoint_order": [  ],
	    "bounds": {
	      "southwest": {
		"lat": number,
		"lng": number
	      },
	      "northeast": {
		"lat": number,
		"lng": number
	      }
	    }
	  } ]
	}
    } 

verifyUser()
    {
      username: "username"
      password: "password"
    }
    
    returns boolean

createUser()
	{
	  username: "username",
	  password: "password"
	}

	returns ??

mapSchedule() ??
	{
      courses: [course1, course2, ...]
	}
	returns 
	"no saved schedule" or some other failure message
	or 
	{
	  path: [ coord:{ latitude: number, longitude: number }, ... , coord:{ latitude: number, longitude: number } ]
	}
